

redis-lua:
  delayQueueLua: local firstElement = redis.call('zrange', KEYS[1], 0, 0, 'withscores');
                 if tonumber(firstElement[2]) < tonumber(ARGV[1]) then redis.call('zrem', 'delay-queue', firstElement[1]); return firstElement[1] else return false end


spring:
  redis:
    host: 172.23.0.217
    port: 30947
    password: paas123
    database: 0
#    lettuce:
#      pool:
#        max-active: 8
#        max-wait: -1
#        max-idle: 8
#        min-idle: 0
    jedis:
      pool:
        max-active: 8
        max-wait: -1
        max-idle: 8
        min-idle: 0
  kafka:
    # kafka集群地址
    bootstrap-servers: 39.101.137.22:9092
    consumer:
      # 是否自动提交offset
      enable-auto-commit: true
      # 自动提交偏移量给zookeeper的频率（单位:毫秒）
      auto-commit-interval: 1000
      # session过期时间(ms)
      session-timeout: 1000
      # 当Kafka中没有初始偏移量或者服务器上不再存在当前偏移量时（例如因为该数据已被删除）的应对策略,有以下取值:earliest：自动将偏移重置为最早的偏移量、latest：自动将偏移重置为最新的偏移量、anything：抛出异常
      auto-offset-reset: latest
      # 组ID
      group-id: test-consumer-group
      # 每次最大消费消息数量
      max-poll-records: 100





server:
  port: 9001

